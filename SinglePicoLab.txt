Ben Jacobson
CS 462, Single Pico Lab
March 18, 2017

Part 1

	RuleSets
		1. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/hello_world.krl
		2. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/echo_service.krl
		3. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/track_trips.krl

	RIDs
		1. hello_world
		2. echo_service
		3. track_trips

	ECI
		cj0bt4qbw0001hguz9uvj43zd

	Questions
		1. I parsed the rulesets with krl-compiler on the command line.
		2. {"directives":[{"options":{"something":"hi"},"name":"say","meta":{"rid":"echo_service","rule_name":"message","txn_id":"TODO","eid":"1556"}}]} One directive was returned. I think only this one rule ran.
		3. {"directives":[{"options":{"something":"hi"},"name":"say","meta":{"rid":"echo_service","rule_name":"message","txn_id":"TODO","eid":"1556"}},{"options":{"trip_length":"100"},"name":"trip","meta":{"rid":"track_trips","rule_name":"process_trip","txn_id":"TODO","eid":"1556"}}]} Two directives were returned. I think just the two rules ran.
		4. When the event comes into the pico, each ruleset must be searched to see if it has a domain the matches the event domain. Then each matching domian probably must be searched for a matching event type. Each type match that is found must be checked to see if it is shared and shared events will then be run to create directives.

Part 2

	RuleSets
		1. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/track_trips_2.krl

	RIDs
		1. track_trips_2

	ECI
		cj0bt4qbw0001hguz9uvj43zd

	Questions
		1. I observed that the pico responded to the event. The domain and type of the event that I sent matched the new rule I registered, so that rule was run and the directive returned.
		2. I would say that the new rule is an event filter which could be considered an event intermediary. It only propagates the event on the condition that the mileage is high enough. The event does not take any action itself besides filtering.
		3. The log shows "eci: 'cj0bt4qbw0001hguz9uvj43zd' } rule selected: track_trips_2 -> count_long_trips". This shows that the count_long_trips rule executed which means it is working.
		4. I would keep track of the average_trip_length and then make long_trip anything 50% greater than the average_trip_length.

Part 3

	RuleSets
		1. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/trip_store.krl
		2. https://raw.githubusercontent.com/BenJacobson/PicoLab1/master/track_trips_2.krl

	RIDs
		1. trip_store
		2. track_trips_2

	ECI
		cj0bt4qbw0001hguz9uvj43zd

	Questions
		1. Collect trips is an example of an event in the event-query API because it will respond to the event of a trip occuring and it will also save that trip data. Then the trips function can retrieve, or query, bringing the query side of the API.
		2. My strategy for finding short_trips was to filter the trips and remove trips that had a trip length greater than or equal to the long trip length, only leaving short trips. I could have also checked for entries in trips that were not in long trips.
		3. If provides does not list the trips function then that function cannot be accessed when the ruleset is loaded as a module. If trips is to be accessed in the ruleset as a module then it must be listed in the provides area of the meta section in the ruleset.
		4. If shares does not list a rule or function then that piece cannot be accessed directly from the api. It can still be accessed however from withing the pico itself. This is like public and private entities.